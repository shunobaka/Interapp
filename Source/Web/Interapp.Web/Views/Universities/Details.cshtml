@model Interapp.Web.ViewModels.Universities.UniversityDetailsViewModel
@{
    ViewBag.Title = "University Details";
}

<div id="messages">

</div>

<div class="row">
    <div class="col-md-6">
        <h2>University details</h2>
    </div>
    @if (this.User.IsInRole("Student"))
    {
        <div class="col-md-6">
            <br />
            <img src="~/Content/loading.gif" alt="loading..." id="loading" style="display: none" width="40" class="pull-right" />
            <div id="add-form-container">
                @using (@Ajax.BeginForm("Add university", null, new AjaxOptions
                {
                    UpdateTargetId = "result",
                    InsertionMode = InsertionMode.Replace
                }, new
                {
                    id = "add-uni-form"
                }))
                {
                    @Html.AntiForgeryToken();
                    <input type="button" value="Add to universities of interest" class="btn btn-success pull-right" onclick="postForm()" />
                }
            </div>
        </div>
    }
</div>
<hr />
@if (Model == null)
{
    <h3>No such university exists!</h3>
    @Html.ActionLink("Return to universities list", "All", "Universities", null, new { @class = "btn btn-primary" })
    return;
}

<h2 class="text-center">@Model.Name</h2>
<hr />
<div class="row">
    <div class="col-md-3">
        <h3 class="text-center">General Information</h3>
        <hr />
        <h5>Country: @Model.Country.Name</h5>
        <h5>Director: @Model.Director.Director.FirstName @Model.Director.Director.LastName</h5>
        <h5>Tuition fee: @string.Format("{0:C}", Model.TuitionFee)</h5>
        <h5>Enrolled students: @Model.EnrolledStudents</h5>
        <h5>Interested students: @Model.InterestedStudents</h5>
    </div>
    <div class="col-md-6">
        <h3 class="text-center">Admissions Information</h3>
        <hr />
        <div class="col-md-6">
            <h4>Scores Requirements</h4>
            <h5>SAT: @((Model.RequiredSAT != null) ? Html.Raw(Model.RequiredSAT) : Html.Raw("None"))</h5>
            <h5>TOEFL (IBT/PBT): @((Model.RequiredIBTToefl != null) ? Html.Raw(Model.RequiredIBTToefl) : Html.Raw("None")) / @((Model.RequiredPBTToefl != null) ? Html.Raw(Model.RequiredPBTToefl) : Html.Raw("None"))</h5>
            <h5>Cambridge: @((Model.RequiredCambridgeScore != null) ? Html.Raw(Model.RequiredCambridgeLevel + " " + Model.RequiredCambridgeScore) : Html.Raw("Not required"))</h5>
        </div>
        <div class="col-md-6">
            <h4>Document requirements</h4>
            @if (Model.DocumentRequirements.Count == 0)
            {
                <h5>No documents are required.</h5>
            }
            @foreach (var document in Model.DocumentRequirements)
            {
                <h5>@document.Name</h5>
            }
        </div>
    </div>
    <div class="col-md-3">
        <h2>Place for image</h2>
    </div>
</div>

@section scripts {
    <script>
        function postForm(e) {
            $("#loading").show();
            var verificationToken = $("input[name=\"__RequestVerificationToken\"]").val()
            $.ajax({
                url: "/Student/Universities/Add/" + @Model.Id,
                method: "post",
                data: {
                    "__RequestVerificationToken": verificationToken
                },
                success: function (response) {
                    $('#messages').html(response);
                    $('#add-form-container').html('');
                    $("#loading").hide();
                }
            });
        }
    </script>
}